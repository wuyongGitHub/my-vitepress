name: Deploy VitePress to GitHub Pages

# 触发条件：当推送到 main 分支时运行
on:
  push:
    branches: [main] # 如果你的主分支是 master，请改为 master

# 设置权限
permissions:
  contents: read # 读取代码
  pages: write # 写入 Pages（用于部署）
  id-token: write # 允许使用 OIDC（虽然这里用不到，但保持兼容）

# 同一时间只运行一个部署任务
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy VitePress Site
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # 推荐使用 Node.js 18
          cache: "npm" # 缓存 npm 依赖，加快构建

      # 3. 安装项目依赖
      - name: Install Dependencies
        run: npm install

      # 4. 构建 VitePress 静态文件
      - name: Build VitePress
        run: |
          # 确保 package.json 中有 "docs:build": "vitepress build docs"
          npm run docs:build

      # 5. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          # 使用你创建的 Personal Access Token (PAT)
          github_token: ${{ secrets.PERSONAL_TOKEN }}

          # 构建输出目录（vitepress 默认输出到 .vitepress/dist）
          publish_dir: ./docs/.vitepress/dist

          # 部署到 gh-pages 分支
          publish_branch: gh-pages

          # 禁用 Jekyll 处理（避免解析 front matter 错误）
          enable_jekyll: false

          # 不允许空提交
          allow_empty_commit: false

          # 可选：设置 CNAME（如果你有自定义域名）
          # cname: yourdomain.com

          # 可选：排除某些文件
          # exclude_assets: .github
